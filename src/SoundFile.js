import { AudioLoader } from 'three'

export class SoundFile {
  /**
   * @param {SoundFileData} options
   */
  constructor (options) {
    this.id = options.id
    this.url = options.url

    /**
     * AudioBuffer that is used to initialize sounds.
     * It's kept in the class instance so that it can be
     * reused by multiple sounds.
     *
     * @type {?AudioBuffer}
     */
    this.buffer = null

    /**
     * The promise generated by #install().
     * It's kept around as the installation state.
     *
     * @type {?Promise<this>}
     */
    this.promise = null
  }

  install () {
    if (this.promise != null) return this.promise

    const audioLoader = new AudioLoader()
    this.promise = audioLoader.loadAsync(this.url).then(buffer => {
      this.buffer = buffer
      return this
    })

    return this.promise
  }
}
